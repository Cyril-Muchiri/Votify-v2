version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: cyrilmuchiri/votify-v2
    docker:
      - image: cimg/openjdk:17.0.9-node

jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - run:
          name: Run Maven Tests
          command: mvn test

      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker Image
          command: |
            docker build -t votify-staging:staging -f staging-Dockerfile .
      - run:
          name: Archive Docker Image
          command: docker save -o image.tar votify-staging
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Load archived Docker
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag votify-staging:staging votify-staging:$IMAGE_TAG
            docker push votify-staging:staging
            docker push votify-staging:$IMAGE_TAG

  publish-tag:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Load archived Docker
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker tag votify-staging:staging votify-staging:$IMAGE_TAG
            docker push votify-staging:staging
            docker push votify-staging:$IMAGE_TAG

  deploy:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install Ansible
          command: |
            sudo apt update
            sudo apt install -y ansible

      - add_ssh_keys:
          fingerprints:
            - "${SSH_FINGERPRINT}"
      - run:
          name: Deploy with Ansible
          command: |
            ansible-playbook -i inventory.ini staging-playbook.yml

workflows:
  version: 2
  build-main:
    jobs:
      - build:
          filters:
            branches:
              only: staging
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: staging
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: staging
              

  build-tags:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-tag:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
